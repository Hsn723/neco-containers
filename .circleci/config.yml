version: 2.1
jobs:
  build:
    parameters:
      container-image:
        type: string
    description: "build << parameters.container-image >>"
    working_directory: /app
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install tools
          command: |
            apk add --no-cache curl jq
      - run:
          name: Check TAG files
          command: |
            c="$(./tag_exists << parameters.container-image >>)"
            if [ "$c" = ng ]; then
                echo << parameters.container-image >> > BUILDS
            fi
      - run:
          name: Build images
          command: |
            if [ ! -f BUILDS ]; then
                echo "no need to build << parameters.container-image >>."
                exit 0
            fi
            echo
            echo "building << parameters.container-image >> ..."
            docker build -t quay.io/cybozu/<< parameters.container-image >>:latest << parameters.container-image >>
      - deploy:
          name: Push Docker image to Quay.io
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
                exit 0
            fi
            if [ ! -f BUILDS ]; then
                exit 0
            fi
            docker login -u $QUAY_USER -p $QUAY_PASSWORD quay.io
            echo
            echo "pushing << parameters.container-image >> ..."
            TAG=$(cat << parameters.container-image >>/TAG)
            docker tag quay.io/cybozu/<< parameters.container-image >>:latest quay.io/cybozu/<< parameters.container-image >>:$TAG
            docker push quay.io/cybozu/<< parameters.container-image >>:$TAG
            if echo $TAG | grep -q -e - ; then
                echo ===== Skip pushing branch tags for pre-release $TAG =====
                exit 0
            fi
            if [ -f << parameters.container-image >>/BRANCH ]; then
                BRANCH=$(cat << parameters.container-image >>/BRANCH)
                docker tag quay.io/cybozu/<< parameters.container-image >>:$TAG quay.io/cybozu/<< parameters.container-image >>:$BRANCH
                docker push quay.io/cybozu/<< parameters.container-image >>:$BRANCH
            fi
  build-go-sources:
    parameters:
      directory:
        type: string
    description: "build Go sources at << parameters.directory >>"
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    steps:
      - checkout
      - run:
          command: |
            cd << parameters.directory >>
            test -z "$(gofmt -s -l . | grep -v '^vendor' | tee /dev/stderr)"
            golint -set_exit_status $(go list -mod=vendor ./... | grep -v /vendor/)
            go build -mod=vendor -o /dev/null ./...
            go test -mod=vendor -race -v ./...
            go vet -mod=vendor ./...
  scripts-cke-tools:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - checkout
      - run: apt-get update
      - run: cd cke-tools/src/scripts; make setup SUDO=
      - run: cd cke-tools/src/scripts; make

workflows:
  version: 2
  main:
    jobs:
      - scripts-cke-tools
      - build-go-sources:
          name: build sources of cke-tools
          directory: cke-tools/src
      - build-go-sources:
          name: build sources of testhttpd
          directory: testhttpd/src
      - build-go-sources:
          name: build sources of machines-endpoints
          directory: machines-endpoints/pkg/machines-endpoints
      - build-go-sources:
          name: build sources of restrictpkg
          directory: golang/restrictpkg
      - build:
          name: argocd
          container-image: argocd
      - build:
          name: bird
          container-image: bird
      - build:
          name: calico
          container-image: calico
      - build:
          name: cert-manager
          container-image: cert-manager
      - build:
          name: chrony
          container-image: chrony
      - build:
          name: cke-tools
          container-image: cke-tools
      - build:
          name: contour
          container-image: contour
      - build:
          name: coredns
          container-image: coredns
      - build:
          name: dnsmasq
          container-image: dnsmasq
      - build:
          name: envoy
          container-image: envoy
      - build:
          name: etcd
          container-image: etcd
      - build:
          name: external-dns
          container-image: external-dns
      - build:
          name: golang
          container-image: golang
      - build:
          name: grafana
          container-image: grafana
      - build:
          name: hyperkube
          container-image: hyperkube
      - build:
          name: kube-state-metrics
          container-image: kube-state-metrics
      - build:
          name: machines-endpoints
          container-image: machines-endpoints
      - build:
          name: metallb
          container-image: metallb
      - build:
          name: pause
          container-image: pause
      - build:
          name: prometheus
          container-image: prometheus
      - build:
          name: redis
          container-image: redis
      - build:
          name: serf
          container-image: serf
      - build:
          name: squid
          container-image: squid
      - build:
          name: testhttpd
          container-image: testhttpd
      - build:
          name: unbound
          container-image: unbound
      - build:
          name: vault
          container-image: vault
